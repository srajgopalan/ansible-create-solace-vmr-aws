---
- name: Create a security group
  local_action: 
    module: ec2_group
    name: "{{ security_group }}"
    description: "{{ security_group_description }}"
    region: "{{ region }}"
    #aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    #aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 2222
        to_port: 2222
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 55555
        to_port: 55555
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8080
        to_port: 8080
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Launch the new EC2 Instance
  local_action: 
    module: ec2
    group: "{{ security_group }}" 
    instance_type: "{{ instance_type}}" 
    image: "{{ image }}"
    wait: true 
    region: "{{ region }}" 
    keypair: "{{ keypair }}"
    count: "{{count}}"
    user_data: "{{ lookup('file', 'cloud-config') }}"
    volumes:
      - device_name: /dev/sda1
        volume_size: 30
        delete_on_termination: true             
  register: ec2

- debug: var=item
  with_items: "{{ ec2.instances }}"

- name: Add tag to Instance(s)
  local_action:
    module: ec2_tag
    resource: "{{ item.id }}"
    region: "{{ region }}"
    state: present
  with_items: "{{ ec2.instances }}"
  args:
    tags:
      Name: solace-ansible
      Owner: srajgopalan

- debug: var=item.public_ip
  with_items: "{{ ec2.instances }}"

- name: Wait for SSH port to come up
  local_action: wait_for 
                host={{item.public_ip}} 
                port=22
                delay=120
                timeout=300
                state=started
  with_items: "{{ ec2.instances }}"

- name: Wait for 5 minutes for SEMP port to become available
  pause:
    minutes: 5

- name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
  local_action: lineinfile 
                dest="hosts" 
                regexp={{ item.public_ip }} 
                insertafter="[solace]" line={{ item.public_ip }}
  with_items: "{{ ec2.instances }}"

#- name: Set a variable for the EC2 properties
#  set_fact:
#           ip_address: "{{ ec2.instances[0].public_ip }}"
